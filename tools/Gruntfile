/**
 * Supported environment variables
 *
 * TF_VERSION: point Tensorflow version
 * TF_FORCE_LIB_DOWNLOAD: force downloading compiled libs
 */
var _ = require('lodash');

var fs = require('fs');
var path = require('path');
var os = require('os');
var format = require('util').format;

var request = require('request');
var progress = require('request-progress');
var log = require('single-line-log').stdout;

var VERSION = process.env['TF_VERSION'] || 'v1.2.0-rc2';
var LINUX_X64_LIBS = [
  'https://s3.amazonaws.com/jiojiajiu-tensorflow/' + VERSION + '/linux_x86_64/libtensorflow_cc.so'
]

module.exports = function (grunt) {
  grunt.initConfig({});

  grunt.registerTask("default", ["download_libtensorflow"]);

  grunt.registerTask("download_libtensorflow", function () {
    var arch = os.arch();
    var platform = os.platform();

    createLibDir();

    if (platform === 'linux') {
      if (arch === 'x64') {
        _.forEach(LINUX_X64_LIBS, _.bind(_.partial(fetchLib, platform, arch), this));
        return;
      }
    }

    throw new Error(format("Unsupported system configuration (%s: %s)", platform, arch));
  });
}

function fetchLib(platform, arch, url) {
    var force = process.env['TF_FORCE_LIB_DOWNLOAD'] || false
    var libname = path.basename(url);
    var libPath = path.resolve(__dirname, '../lib', libname);
    console.log(format("Downloading %s (%s: %s)", libname, platform, arch));
    console.log(url)

    if (!fs.existsSync(libPath) || force) {
      done = this.async();
      progress(request(url))
        .on('progress', function (state) {
          if (this.response.statusCode != 200) {
            throw new Error(this.response.statusMessage);
          }
          log(format("%d%", Math.round(state.percent * 10000) / 100));
        })
        .on('end', done)
        .pipe(fs.createWriteStream(libPath));
    } else {
      console.info("The library already exists");
    }
}

function createLibDir() {
  var dirPath = path.resolve(__dirname, '../lib');
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath);
  }
}
